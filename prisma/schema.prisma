generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(uuid())

  email    String    @unique
  password Password?

  boards Board[]
  items  Item[]
  chores Chore[]
  homes  Home[]
}

model Password {
  id   String @id @default(uuid())
  salt String
  hash String

  accountId String  @unique
  account   Account @relation(fields: [accountId], references: [id])
}

model Board {
  id Int @id @default(autoincrement())

  name  String
  color String @default("#eaeaea")

  accountId String
  account   Account @relation(fields: [accountId], references: [id])

  shareable Boolean? @default(false)

  items   Item[]
  columns Column[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Column {
  id String @id @default(uuid())

  name    String
  content String?
  order   Float   @default(0)

  completionColumn Boolean? @default(false)

  items Item[]

  board   Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id String @id @default(uuid())

  title   String
  content String @default("")

  // Why is order a float? We split the difference betwen prev/next
  // If an item is dropped between 1.00 and 2.00 it will be 1.50.  If dropped
  /// between 1.50 and 2.0 it will be 1.75, etc...
  order Float

  complete Boolean? @default(false)

  board   Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId Int

  column   Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account   Account? @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String?

  kid   Kid?    @relation(fields: [kidId], references: [id])
  kidId String?

  @@index([complete])
}

model Kid {
  id String @id @default(uuid())

  name  String
  score Float?

  color String @default("#93c1fd")
  emoji String @default("ðŸ‘¶")

  chores Chore[]
  items  Item[]

  home   Home?   @relation(fields: [homeId], references: [id])
  homeId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Home {
  id String @id @default(uuid())

  name  String
  color String @default("#eaeaea")

  kids   Kid[]
  chores Chore[]

  creator   Account? @relation(fields: [accountId], references: [id])
  accountId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chore {
  id String @id @default(uuid())

  title       String
  description String
  color       String  @default("#eaeaea")
  complete    Boolean @default(false)

  creator   Account? @relation(fields: [accountId], references: [id])
  accountId String?

  dueDate     DateTime?
  completedAt DateTime?

  child Kid?    @relation(fields: [kidId], references: [id])
  kidId String?

  home   Home?   @relation(fields: [homeId], references: [id])
  homeId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuditLog {
  id String @id @default(uuid())

  action      String
  entityId    String
  entityType  String
  entityTitle String
  authorId    String
  authorEmail String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
